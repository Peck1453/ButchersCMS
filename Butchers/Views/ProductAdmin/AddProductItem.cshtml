@model Butchers.Data.BEANS.ProductItemBEAN

@{
    ViewBag.Title = "Add Product";
}

<div class="row">
    <div class="col-md-10">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="col-md-2">
        <button class="btn btn-info btn-header" onclick="javascript:history.back()"><i class="fas fa-chevron-left"></i></button>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @* Shows a list of all products - These aren't filtered as customers may want to add the same one multiple times *@
            <div class="form-group">
                @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label" })
                <div class="row">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.ProductId, (List<SelectListItem>)ViewBag.productList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label" })
                        <div class="row">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control",  maxlength = 3 } })
                                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    @* Shows a list of different measurements *@
                    <div class="form-group">
                        @Html.LabelFor(model => model.MeasurementId, htmlAttributes: new { @class = "control-label" })
                        <div class="row">
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.MeasurementId, (List<SelectListItem>)ViewBag.measurementList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MeasurementId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        <input type="submit" value="Save" class="btn btn-info" />
                    </div>
                </div>
            </div>
        </div>
    }
    </div>
</div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
